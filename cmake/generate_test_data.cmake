# Find test data generation files
execute_process(COMMAND ${CMAKE_COMMAND} -E chdir .. pwd OUTPUT_VARIABLE PROJECT_SOURCE_DIR)
string(REPLACE "\n" "" PROJECT_SOURCE_DIR ${PROJECT_SOURCE_DIR})
set(FIND_COMMAND find test -type f -name "generate_*.m")
set(FIND_GENERATION_FILES ${CMAKE_COMMAND} -E chdir .. ${FIND_COMMAND} )
execute_process(COMMAND ${FIND_GENERATION_FILES} RESULT_VARIABLE RESULT OUTPUT_VARIABLE TEST_DATA_GENERATION_FILES)
string(REPLACE "\n" " " TEST_DATA_GENERATION_FILES ${TEST_DATA_GENERATION_FILES})
separate_arguments(TEST_DATA_GENERATION_FILES)
# Generate the test data
foreach(GENERATION_FILE IN ITEMS ${TEST_DATA_GENERATION_FILES})
    set(GENERATION_FILE "${PROJECT_SOURCE_DIR}/${GENERATION_FILE}")
    if(NOT EXISTS test)
        execute_process(COMMAND ${CMAKE_COMMAND} -E chdir . mkdir test)
    endif()
    get_filename_component(GENERATION_DIR ${GENERATION_FILE} PATH)
    set(GENERATE_TEST_DATA octave --no-gui --path "${GENERATION_DIR}" ${GENERATION_FILE})
    execute_process(COMMAND ${CMAKE_COMMAND} -E chdir test ${GENERATE_TEST_DATA} RESULT_VARIABLE GENERATION_OKAY)
    if(NOT ${GENERATION_OKAY} EQUAL 0)
        message(FATAL_ERROR "Could not generate data from " ${GENERATION_FILE})
    endif()
endforeach()

# Postprocess Casadi generated files
include(../cmake/test_sources.cmake)
foreach(CASADI_UNIT_TEST IN ITEMS ${UNIT_TESTS_SRC_CASADI})
    execute_process(COMMAND sed  -i .bak -e "s/real_t\ a0/mem\ =\ 0;\ mem\ +=\ 0;\ w\ =\ 0;\ w\ +=\ 0;\ iw\ =\ 0;\ iw\ +=\ 0;\\\n  real_t\ a0/g" ${CASADI_UNIT_TEST} RESULT_VARIABLE SED_OKAY)
    if(NOT ${SED_OKAY} EQUAL 0)
        message(FATAL_ERROR "sed failed!")
    endif()
endforeach()
